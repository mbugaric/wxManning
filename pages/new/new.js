"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var hotOrNew = 'new';
var common_1 = require("../../utils/common");
var app = getApp();
Page({
    data: {
        motto: common_1.getMottoForTab(hotOrNew),
        bookDataObtained: false,
        userInfo: {},
        bookData: {},
        sortedMEAPdata: [],
        sortedPublishedData: [],
        hasUserInfo: false,
        currentTab: 0,
        canIUse: wx.canIUse('button.open-type.getUserInfo'),
    },
    bindViewTap: function () {
        console.log(app.globalData);
    },
    selectTab: function (event) {
        if (event && event.currentTarget && event.currentTarget.dataset) {
            var newTab_1 = Number(event.currentTarget.dataset.tab);
            if (!isNaN(newTab_1) && newTab_1 != this.data.currentTab) {
                this.setData({
                    currentTab: newTab_1,
                }, function () {
                    app.globalData.currentTab = newTab_1;
                });
            }
        }
    },
    onLoad: function () {
        this.setUserInfoData();
        this.setBookData();
    },
    setBookData: function () {
        var _this = this;
        if (app.globalData.bookData) {
            this.setData({
                bookData: app.globalData.bookData,
                bookDataObtained: true,
            }, function () {
                _this.prepareInitialSortedMEAPandPublishedBooks();
            });
        }
        else {
            app.bookDataReadyCallback = function (res) {
                _this.setData({
                    bookData: res,
                    bookDataObtained: true,
                }, function () {
                    _this.prepareInitialSortedMEAPandPublishedBooks();
                });
            };
        }
    },
    onShow: function () {
        if (app.globalData.currentTab !== this.data.currentTab && !isNaN(app.globalData.currentTab)) {
            this.setData({
                currentTab: app.globalData.currentTab,
            });
        }
    },
    prepareInitialSortedMEAPandPublishedBooks: function () {
        if (this.data.bookData) {
            if (this.data.bookData.meaps && this.data.bookData.meaps.length) {
                var sortingFunction = common_1.getSortingFunctionForTab(hotOrNew);
                var sortedMEAPdata = this.data.bookData.meaps.map(function (it) { return common_1.addAuthorIfMissing(it); }).sort(sortingFunction);
                this.setData({
                    sortedMEAPdata: sortedMEAPdata
                });
            }
            if (this.data.bookData.published && this.data.bookData.published.length) {
                var sortingFunction = common_1.getSortingFunctionForTab(hotOrNew);
                var sortedPublishedData = this.data.bookData.published.map(function (it) { return common_1.addAuthorIfMissing(it); }).sort(sortingFunction);
                this.setData({
                    sortedPublishedData: sortedPublishedData
                });
            }
        }
    },
    setUserInfoData: function () {
        var _this = this;
        if (app.globalData.userInfo) {
            this.setData({
                userInfo: app.globalData.userInfo,
                hasUserInfo: true,
            });
        }
        else if (this.data.canIUse) {
            app.userInfoReadyCallback = function (res) {
                _this.setData({
                    userInfo: res,
                    hasUserInfo: true
                });
            };
        }
        else {
            wx.getUserInfo({
                success: function (res) {
                    app.globalData.userInfo = res.userInfo;
                    _this.setData({
                        userInfo: res.userInfo,
                        hasUserInfo: true
                    });
                }
            });
        }
    },
    getUserInfo: function (e) {
        console.log(e);
        app.globalData.userInfo = e.detail.userInfo;
        this.setData({
            userInfo: e.detail.userInfo,
            hasUserInfo: true
        });
    }
});
//# sourceMappingURL=data:application/json;base64,